{
  "configurableConfig" : [
    {
      "config" : {
        "default" : "base64",
        "pairs" : [
          [
            "Base64",
            "base64"
          ],
          [
            "Hexadecimal",
            "hex"
          ]
        ]
      },
      "description" : "",
      "label" : "Input Representation",
      "type" : "popupbutton",
      "variable" : "in_format"
    },
    {
      "config" : {
        "default" : "",
        "filtermode" : 2,
        "placeholder" : "The passed-in arguments will be used",
        "required" : false
      },
      "description" : "",
      "label" : "File",
      "type" : "filepicker",
      "variable" : "target_path"
    },
    {
      "config" : {
        "default" : "~\/Desktop",
        "filtermode" : 1,
        "placeholder" : "",
        "required" : false
      },
      "description" : "File name will be derived from current date and time.",
      "label" : "Save Folder",
      "type" : "filepicker",
      "variable" : "save_in"
    },
    {
      "config" : {
        "default" : false,
        "required" : false,
        "text" : "Replace file with same name at destination"
      },
      "description" : "",
      "label" : "Overwrite",
      "type" : "checkbox",
      "variable" : "overwrite"
    }
  ],
  "inputMulti" : -1,
  "inputType" : 1,
  "outputType" : 1,
  "script" : "if [[ -n \"${target_path}\" ]]; then\n  readonly single_input=\"${target_path}\"\nelif [[ \"${#}\" -gt 1 ]]; then\n  echo 'Expecting single input' >&2\n  exit 1\nelif [[ \"${#}\" -eq 1 ]]; then\n  readonly single_input=\"${1}\"\nelse\n  echo 'Expecting valid input or configuration' >&2\n  exit 1\nfi\n\nreadonly output=\"${save_in}\/bin-$(date \"+%F-%H-%M-%S\")\"\nmkdir -p \"${save_in}\"\n\nif [[ \"${overwrite}\" -eq 0 && -f \"${output}\" ]]; then\n  echo \"File exists: ${output}\" >&2\n  exit 1\nfi\n\ncase \"${in_format}\" in\n  base64) base64 --decode \"${single_input}\" --output \"${output}\";;\n  hex) xxd -plain -revert \"${single_input}\" > \"${output}\";;\n  *) echo \"Invalid representation: ${in_format}\" >&2; exit 1;;\nesac\n\necho -n \"${output}\"",
  "scriptType" : 5,
  "state" : 0,
  "taskDescription" : "Binary-decodes passed-in file",
  "taskName" : "Binary Decode File"
}