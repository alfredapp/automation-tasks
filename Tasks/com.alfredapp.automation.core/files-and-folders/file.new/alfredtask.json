{
  "configurableConfig" : [
    {
      "config" : {
        "default" : "",
        "filtermode" : 2,
        "placeholder" : "The passed-in arguments will be used",
        "required" : false
      },
      "description" : "",
      "label" : "File",
      "type" : "filepicker",
      "variable" : "target_path"
    }
  ],
  "inputMulti" : -1,
  "inputType" : 0,
  "outputType" : 1,
  "script" : "function alfredArgs(args) {\n  return JSON.stringify({ alfredworkflow: { arg: args } })\n}\n\nfunction envVar(varName) {\n  return $.NSProcessInfo\n    .processInfo\n    .environment\n    .objectForKey(varName).js\n}\n\nfunction run(argv) {\n  const targets = envVar(\"target_path\") ? envVar(\"target_path\").split(\"\\n\") : argv\n  const fileManager = $.NSFileManager.defaultManager\n\n  if (targets.length === 0) throw \"Either a valid input or configuration is required\"\n\n  const paths = targets.map(path => $(path).stringByExpandingTildeInPath.js)\n\n  paths.forEach(path => {\n    if (!path.startsWith(\"\/\")) throw \"Invalid path: \" + path\n    if (fileManager.fileExistsAtPath(path)) throw \"File exists: \" + path\n\n    fileManager.createDirectoryAtPathWithIntermediateDirectoriesAttributesError($(path).stringByDeletingLastPathComponent.js, true, undefined, undefined)\n    fileManager.createFileAtPathContentsAttributes(path, undefined, undefined)\n  })\n\n  return alfredArgs(paths)\n}\n\n\n",
  "scriptType" : 7,
  "state" : 0,
  "taskDescription" : "Makes a new empty file, including intermediary folders",
  "taskName" : "Make New Empty File"
}