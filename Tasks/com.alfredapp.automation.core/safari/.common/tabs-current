#!/usr/bin/osascript -l JavaScript

function alfredArgs(args) {
  return JSON.stringify({ alfredworkflow: { arg: args } })
}

function browserVariant(appName) {
  const webkitVariants = ["Safari", "Webkit", "Orion"]
  const chromiumVariants = ["Google Chrome", "Chromium", "Opera", "Vivaldi", "Brave Browser", "Microsoft Edge"]

  if (webkitVariants.some(browserName => browserName.startsWith(appName))) return { app: Application(appName), variant: "webkit" }
  if (chromiumVariants.some(browserName => browserName.startsWith(appName))) return { app: Application(appName), variant: "chromium" }
  throw new Error(`${appName} is not a supported browser: ${webkitVariants.concat(chromiumVariants).join(", ")}`)
}

function run(argv) {
  const browser = argv[0] === "frontmost_browser" ?
    browserVariant(Application("System Events").applicationProcesses.where({ frontmost: true })[0].name()) :
    browserVariant(argv[0])
  const outFormat = argv[1]

  const currentTab = browser.variant === "webkit" ?
    browser.app.windows[0].currentTab :
    browser.app.windows[0].activeTab

  switch (outFormat) {
    case "url": return alfredArgs(currentTab.url())
    case "title": return alfredArgs(currentTab.name())
    case "url_tab_title": return alfredArgs(currentTab.url() + "\t" + currentTab.name())
    case "title_tab_url": return alfredArgs(currentTab.name() + "\t" + currentTab.url())
    case "url_title": return alfredArgs(currentTab.url() + "|" + currentTab.name())
    default: throw "Unrecognised type: " + outFormat
  }
}
