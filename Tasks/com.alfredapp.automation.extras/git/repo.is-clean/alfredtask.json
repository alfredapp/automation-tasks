{
  "configurableConfig" : [
    {
      "config" : {
        "default" : "",
        "filtermode" : 1,
        "placeholder" : "The passed-in arguments will be used",
        "required" : false
      },
      "description" : "",
      "label" : "Folder",
      "type" : "filepicker",
      "variable" : "target_path"
    },
    {
      "config" : {
        "default" : true,
        "required" : false,
        "text" : "Include untracked files"
      },
      "description" : "",
      "label" : "Checks",
      "type" : "checkbox",
      "variable" : "untracked"
    }
  ],
  "inputMulti" : 2,
  "inputOverride" : "target_path",
  "inputType" : 1,
  "outputDescription" : "Boolean (\"true\" or \"false\")",
  "outputType" : 1,
  "script" : "# Validations\nfor input in \"${@}\"\ndo\n  # If git repo, skip to next loop iteration\n  git -C \"${input}\" rev-parse --is-inside-work-tree &> \/dev\/null && continue\n\n  # If we reach here, at least one directory is not a git repo\n  echo \"Not a git repository: ${input}\" >&2\n  exit 1\ndone\n\n# Main\nopts=()\n[[ \"${untracked}\" -eq 1 ]] || opts+=('--untracked-files=no')\n\nfor input in \"${@}\"\ndo\n  repo_root=\"$(git -C \"${input}\" rev-parse --show-toplevel)\"\n\n  # If clean, skip to next loop iteration\n  [[ -z \"$(git -C \"${repo_root}\" status \"${opts[@]}\" --porcelain)\" ]] && continue\n\n  # If we reach here, at least one repo is not clean\n  echo -n 'false'\n  exit 0\ndone\n\n# If we reach here, all repos are clean\necho -n 'true'",
  "scriptType" : 5,
  "state" : 0,
  "taskDescription" : "Check if repository contains uncommited or untracked files",
  "taskName" : "Is Repository Clean?"
}